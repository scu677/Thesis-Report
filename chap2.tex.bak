\chapter{Background}
\label{chap:figtab}
\label{chap}
\section*{Clowder}
Clowder is made up of various components, and some of this components has been worked on by researchers in the department. The main goal of this project is to complete the Clowder system by developing the remaining components, which are to solve the issue of user accessibility and system management. Generally Clowder has been designed to manage access of cluster of test machines, mainly for testing new operating systems. But as this requires a flexible user interface and database to complete this components, we have designed a dynamic user interface and functioning database to accomplished this need. The background components of Clowder includes  a  DHCP server with Preboot Execution Environment (PXE)  that allow the test machines to be boot up remotely by users for testing. The test machines do a PXE boot and by using the DHCP to get IP then request for files. 
Generaly a PXE is defined on a foundation of industry standard Internet protocols and services that are widely deployed using DHCP. This process forms an interactions between clients and servers. To ensure that the meaning of the client-server interaction is standardized as well, certain vendor option fields in DHCP protocol are used, which are allowed by the DHCP standard. For example, the Wireshark is a fully functional dissector in DHCP packet that detect bugs during this processes\cite{DHCP}. The operations of standard DHCP servers that serve up IP addresses will not be disrupted by the use of the extended protocol \cite{PXE}.
The client initiates the protocol by broadcasting a DHCPDISCOVER containing an extension that identifies the request as coming from a client that implements the PXE protocol. The client then discovers a Boot Server of the type selected and receives the name of an executable file on the chosen Boot Server \cite{PXE}. These files are managed with a Network File System (NFS), which allow users to access files across networks. This processes serves as the main function of Clowder system as a testing tool, so the rest is the part which we have designed to complete this system as a full functional software tool for research.
In the design of some front end functionality extended to back end, we used an SQL JOIN query for combination of different database data where our algorithms requires to merge multiple data for some query request. Generally a  SQL join is a Structured Query Language (SQL) instruction to combine data from two sets of tables. There are different types of join query which includes INNER, OUTER, LEFT and RIGHT join. 



